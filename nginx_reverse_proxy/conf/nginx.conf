worker_processes 1;

events {
    worker_connections 1024;
}

http {
    lua_package_path '/usr/local/openresty/nginx/lua-scripts/?.lua;;';

    #log_format main '$remote_addr - $remote_user [$time_local] "$request"'
    #              '$status $body_bytes_sent "$http_referer" '
    #              '"$http_user_agent" "$http_x_forwarded_for"'

    # access_log  logs/access.log  main;
    error_log on;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    
    keepalive_timeout  120s;
    keepalive_requests 100000;

    # Docker default hostname resolver
    resolver 127.0.0.11 ipv6=off;

    server {
        listen 8080 reuseport;
	    server_name  localhost;

        location /recommendations/get {
            default_type text/plain;
        
            content_by_lua_block{
                local client = require "api/recommender_service/get"
                client.Get();
            }
        }

        location /recommendations/upload {
            default_type text/plain;

            content_by_lua_block{
                local client = require "api/recommender_service/upload"
                client.Upload();
            }
        }

        location /user_rating/rate_movie {
            default_type text/plain;

            content_by_lua_block{
                local client = require "api/user_likes_service/rate_movie"
                client.Rate_Movie();
            }
        }

	location /user_rating/get_user_likes {
            default_type text/plain;

            content_by_lua_block{
                local client = require "api/user_likes_service/get_user_likes"
                client.Get_User_Likes();
            }
        }

	location /movies/get {
            default_type text/plain;

            content_by_lua_block{
                local client = require "api/movies_service/title"
                client.GetTitle();
            }
        }

        location /movies/upload {
            default_type text/plain;

            content_by_lua_block{
                local client = require "api/movies_service/upload"
                client.Upload();
            }
        }

        location /movies/watch {
            default_type text/plain;

            content_by_lua_block{
                local client = require "api/movies_service/watch"
                client.MovieLink();
            }
        }

	location /user_rating/watch_movie {
            default_type text/plain;

            content_by_lua_block{
                local client = require "api/user_likes_service/watch_movie"
                client.Watch_Movie();
            }
        }

    }
}
